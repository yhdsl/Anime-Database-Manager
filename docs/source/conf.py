# Configuration file for the Sphinx documentation builder.
#
# This file only contains a selection of the most common options. For a full
# list see the documentation:
# https://www.sphinx-doc.org/en/master/usage/configuration.html


# -- Path setup --------------------------------------------------------------

# If extensions (or modules to document with autodoc) are in another directory,
# add these directories to sys.path here. If the directory is relative to the
# documentation root, use os.path.abspath to make it absolute, like shown here.

import os
import time
import sphinx

try:
    from core.base import conf
except ModuleNotFoundError:
    import sys
    import pathlib
    sys.path.append(str(pathlib.Path('.').absolute().parent.parent / 'bin'))
    from core.base import conf


if os.environ.get('READTHEDOCS') == 'True':
    import shutil
    import pathlib
    import sphinx_book_theme

    old_tran = pathlib.Path(sphinx_book_theme.__file__).absolute().parent / 'theme' / 'sphinx_book_theme'
    old_tran = old_tran / 'static' / 'locales' / 'zh_CN' / 'LC_MESSAGES'
    new_tran = pathlib.Path(__file__).absolute().parent / 'locales' / 'zh_CN' / 'LC_MESSAGES'

    for old_path in old_tran.iterdir():
        if old_path.is_file():
            old_path.rename(old_path.parent / f"_{old_path.name}")

    shutil.copytree(new_tran, old_tran, dirs_exist_ok=True)


# -- Project information -----------------------------------------------------

project = conf.Project.NAME.value
author = conf.Project.AUTHOR.value
# noinspection PyShadowingBuiltins
copyright = ', '.join([time.strftime('%Y'), author])

# The full version, including alpha/beta/rc tags
version = f"{conf.Version.MAJOR.value}.{conf.Version.MINOR.value}.{conf.Version.MICRO.value}"
release = conf.Version.VERSION.value


# -- General configuration ---------------------------------------------------

suppress_warnings = [
    'epub.unknown_project_files'
]

needs_sphinx = '5.1.1'

# Add any Sphinx extension module names here, as strings. They can be
# extensions coming with Sphinx (named 'sphinx.ext.*') or your custom
# ones.
extensions = [
    'sphinx.ext.autodoc',
    'sphinx.ext.duration',
    'sphinx.ext.intersphinx',
    'sphinx.ext.todo',
    'sphinx_tabs.tabs',
    'notfound.extension',
    'hoverxref.extension'
]

# sphinx.ext.autodoc
autodoc_member_order = 'bysource'
autodoc_inherit_docstrings = False

# sphinx.ext.intersphinx
intersphinx_mapping = {'python': ('https://docs.python.org/zh-cn/3', None)}

# sphinx.ext.to/do
todo_include_todos = True
if os.environ.get('READTHEDOCS') == 'True':
    todo_emit_warnings = False
else:
    todo_emit_warnings = True

# sphinx_tabs.tabs
sphinx_tabs_disable_tab_closing = True

# notfound.extension
notfound_context = {
    'title': '404',
    'body': '<h1>啊哈，你访问的页面似乎被 Herobrine 吓跑了</h1>\n\n'
            '嘘~ 不要担心，让我们向<a href="/">神奇海螺</a>寻求帮助吧。'
}

notfound_urls_prefix = '/zh_CN/latest/'

# hoverxref.extension
hoverxref_role_types = {
    'hoverxref': 'tooltip',
    'ref': 'tooltip',  # for hoverxref_auto_ref config
    'confval': 'tooltip',  # for custom object
    'mod': 'tooltip',  # for Python Sphinx Domain
    'class': 'tooltip',  # for Python Sphinx Domain
}

hoverxref_default_type = 'tooltip'

hoverxref_tooltip_content = '载入中...'

# Add any paths that contain templates here, relative to this directory.
# templates_path = ['_templates']
templates_path = ['']

# List of patterns, relative to source directory, that match files and
# directories to ignore when looking for source files.
# This pattern also affects html_static_path and html_extra_path.
exclude_patterns = []

# The language for content autogenerated by Sphinx. Refer to documentation
# for a list of supported languages.
#
# This is also used if you do content translation via gettext catalogs.
# Usually you set "language" from the command line for these cases.
language = 'zh_CN'


# -- Options for HTML output -------------------------------------------------

# The theme to use for HTML and HTML Help pages.  See the documentation for
# a list of builtin themes.

# html_theme = 'alabaster'
# html_theme = 'python-docs-theme'
# html_theme = 'sphinx_rtd_theme'
html_theme = 'sphinx_book_theme'

_extra_navbar = '<div style="font-weight:bold;">让欣赏的归欣赏，管理的归管理</div>'
_extra_footer = f'<div>本文档使用 ' \
                f'<a href="https://www.sphinx-doc.org/" target="_blank">Sphinx {sphinx.__released__}</a>' \
                f' 创建' \
                f'<br/>' \
                '感谢 <a href="https://sphinx-book-theme.readthedocs.io/" target="_blank">sphinx-book-theme</a> ' \
                '精心制作的主题</div>'

html_theme_options = {
    'path_to_docs': 'docs/',
    'repository_url': conf.Project.URL.value,
    'repository_branch': 'main',
    'use_issues_button': True,
    'use_download_button': True,
    'use_fullscreen_button': True,
    'use_repository_button': True,
    'home_page_in_toc': True,
    'logo_only': True,
    'use_sidenotes': True,
    'extra_navbar': _extra_navbar,
    'extra_footer': _extra_footer
}

if conf.Version.RELEASE_NAME.value.lower() in ('test', 'alpha'):
    html_theme_options['announcement'] = '⚠请注意，当前的文档匹配一个测试或者早期发布的版本，' \
                                         '可能会进行不定期的大幅度修改，因此在阅读了' \
                                         '早期文档之后也值得再次回来看看。⚠'

html_title = conf.Project.SHORT_NAME.value + ' ' + '项目文档'
html_short_title = conf.Project.SHORT_NAME.value

html_logo = '_static/html_logo.png'
html_favicon = '_static/html_favicon.ico'

# Add any paths that contain custom static files (such as style sheets) here,
# relative to this directory. They are copied after the builtin static files,
# so a file named "default.css" will overwrite the builtin "default.css".
html_static_path = ['_static']

html_css_files = ['custom.css']

html_last_updated_fmt = time.strftime('%Y, %m月 %d日, %H:%M:%S', time.gmtime(time.time() + 8 * 60 * 60))

# html_copy_source = False
html_show_sourcelink = False
html_show_sphinx = False
